<?xml version="1.0" encoding="UTF-8"?>
<svg version="1.2" baseProfile="tiny" id="svg-root" width="100%" height="100%" 
  viewBox="0 0 480 360" xmlns="http://www.w3.org/2000/svg" 
  xmlns:xlink="http://www.w3.org/1999/xlink" onload="init(evt)">
  <!--======================================================================-->
  <!--=  Copyright 2006 World Wide Web Consortium, (Massachusetts          =-->
  <!--=  Institute of Technology, European Research Consortium for         =-->
  <!--=  Informatics and Mathematics (ERCIM), Keio University).            =-->
  <!--=  All Rights Reserved.                                              =-->
  <!--=  See http://www.w3.org/Consortium/Legal/.                          =-->
  <!--======================================================================-->
  <!-- NOTE:  CVS will automatically update the                             -->
  <!--        "$RCSfile$" and "$Revision$"         -->
  <!--        fields in the file.                                           -->
  <!--        There is no need to update this information.                  -->
  <!-- =====================================================================-->
  <SVGTestCase xmlns="http://www.w3.org/2000/02/svg/testsuite/description/" reviewer="[reviewer]" owner="ED" desc="Test for getURL and parseXML" status="created" version="$Revision$" testname="$RCSfile$">
    <OperatorScript>
      <Paragraph>
            This test tries to load an xml resource with the getURL method.
			The xml file contains an 'svg' element as root, but this element is
			in not in the svg namespace. Thus it should not have the DOM API:s
			that are available on the SVGSVGElement.
      </Paragraph>
	  <Paragraph>
			Then a call is made to parseXML without using getURL, and
			a rect element is parsed. The rect element is not namespace-qualified
			and is therefore an xml element. As such it must not show up in the
			svg renderingtree when inserted into the document.
	  </Paragraph>
	  <Paragraph>
			Finally a script element in the svg namespace is parsed. The code
			it contains must not be executed before inserted into the document.
	  </Paragraph>
	  <Paragraph>
			The test has passed if after the script has executed there are 
			6 green rects visible and there are no visible red rects.
    </OperatorScript>
  </SVGTestCase>
  <title id="test-title">$RCSfile$</title>
  <!--======================================================================-->
  <!--Content of Test Case follows...                  =====================-->
  <!--======================================================================-->
  <defs>
    <font-face
      font-family="SVGFreeSansASCII"
      unicode-range="U+0-7F">
      <font-face-src>
        <font-face-uri xlink:href="../images/SVGFreeSans.svg#ascii"/>
      </font-face-src>
    </font-face>
  </defs>
  <g id="test-body-content" font-family="SVGFreeSansASCII" font-size="18">	
	<script><![CDATA[
		var test = new Array;
		var ti = 5;
		var val = 47;
		
		var scriptcode = "<script xmlns='http://www.w3.org/2000/svg'>
			var checkval = val;
		</script>"
		
		function loadComplete(status)
		{
			if(status.success)
			{
				test[ti++].setAttribute("fill", "green");
				if(status.contentType == "application/xml")
				{
					test[ti++].setAttribute("fill", "green");
				
					var root = document.global.parseXML(status.content, document);
					
					if(root)
					{
						test[ti++].setAttribute("fill", "green");
						
						try
						{
							// Since root isn't an SVGSVGElement this should give an exception
							var rect = root.createSVGRect();
						}
						catch(e)
						{
							test[ti++].setAttribute("fill", "green");
						}
					}
				}
			}
		}
		
		function init(evt)
		{
			for(var i = 0; i < 6; i++)
			{
				test[i] = document.getElementById("test"+i);
				//test[i].setAttribute("fill", "blue");
			}
			
			document.global.getURL("../images/xmltree.xml", loadComplete);
			
			// this is not an svg element, it's an xml element and must not show up in rendering
			var root = document.global.parseXML("<rect x='100' y='300' width='100' height='100' fill='red'", document);
			document.getElementById("container1").appendChild(root);
			test[ti++].setAttribute("fill", "green");
			
			// if scriptcode is executed immidiately then checkval will be 47,
			// if delayed until insertion in document, then it will be 11.
			var root = document.global.parseXML(scriptcode, document);
			val = 11;
			document.getElementById("container2").appendChild(root);
			if(checkval == 11)
			{
				test[ti++].setAttribute("fill", "green");
			}
		}
	]]></script>
	
		<g transform="translate(290 100)">
			<text text-anchor="end">document.global.getURL()</text>
			<rect id="test0" x="10" y="-15" width="18" height="18" fill="red"/>
		</g>
		<g transform="translate(290 120)">
			<text text-anchor="end">successful load</text>
			<rect id="test1" x="10" y="-15" width="18" height="18" fill="red"/>
		</g>
		<g transform="translate(290 140)">
			<text text-anchor="end">document.global.parseXML()</text>
			<rect id="test2" x="10" y="-15" width="18" height="18" fill="red"/>
		</g>
		<g transform="translate(290 160)">
			<text text-anchor="end">root namespace</text>
			<rect id="test3" x="10" y="-15" width="18" height="18" fill="red"/>
		</g>
		<g id="container1" transform="translate(290 180)">
			<text text-anchor="end">root namespace #2</text>
			<rect id="test4" x="10" y="-15" width="18" height="18" fill="red"/>
		</g>
		<g id="container2" transform="translate(290 200)">
			<text text-anchor="end">deferred script execution</text>
			<rect id="test5" x="10" y="-15" width="18" height="18" fill="red"/>
		</g>
  </g>
  <g font-family="SVGFreeSansASCII" font-size="32">
  <text id="revision" x="10" y="340" stroke="none" 
    fill="black">$Revision$</text>
  </g>
  <rect id="test-frame" x="1" y="1" width="478" height="358" fill="none" stroke="#000"/>
  <g id="draft-watermark">
    <rect x="1" y="1" width="478" height="20" fill="red" stroke="black" stroke-width="1"/>
    <text font-family="'Arial Black', Arial, sans-serif" font-weight="bold" font-size="20" x="240" 
      text-anchor="middle" y="18" stroke-width="0.5" stroke="black" fill="white">DRAFT</text>
  </g>
</svg>
