<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
	width="640" height="480" id="svgroot" viewBox="0 0 480 360" onload="Init();">
<defs>
	<script type="text/ecmascript" xlink:href="svgutils.js"/>
	<script type="text/ecmascript" xlink:href="reflocatable.js"/>
    <script type="text/ecmascript">
      <![CDATA[
      var buttons=new Array(
		"ShowCTM(#1)", "ShowCTM(document.getElementById('elem'));", 
		"ShowCTM(#2)", "ShowCTM(document.getElementById('elem2'));", 
		"RefShowCTM(#1)", "RefShowCTM(document.getElementById('elem'));",
		"RefShowCTM(#2)", "RefShowCTM(document.getElementById('elem2'));",
		"ShowScreenCTM(#1)", "ShowScreenCTM(document.getElementById('elem'));",
		"ShowScreenCTM(#3)", "ShowScreenCTM(document.getElementById('elem3'));",
		"RefShowScreenCTM(#1)", "RefShowScreenCTM(document.getElementById('elem'));",
		"RefShowScreenCTM(#3)", "RefShowScreenCTM(document.getElementById('elem3'));",
		"ShowBBox(#1)", "ShowBBox(document.getElementById('elem'));",
		"XFormToElement(#1 -> #2)", "ShowTransformToElement(document.getElementById('elem'), document.getElementById('elem2'));",
		"RefXFormToElement(#1 -> #2)", "RefShowTransformToElement(document.getElementById('elem'), document.getElementById('elem2'));",
		"XFormRect", "XFormRect();",
		"UnXFormRect", "UnXFormRect();",
		"SwapRects", "SwapRects();",
		"ShowXFormListLengths", "ShowXFormListLengths();"
		);
    function Init()
    {
		svgRoot = document.getElementById('svgroot');
		svgDoc = svgRoot;
		svgWindow = svgRoot;
		createSVGButtons(document.getElementById('buttonroot'), buttons, 10, 10);
    }
    
	function ShowCTM(ctmelm)
	{
		var ctm = ctmelm.getCTM();
		alert("CTM: [ " + ctm.a + " " + ctm.b + " " + ctm.c + " " + ctm.d + " " + ctm.e + " " + ctm.f + " ]");
	}
	
	function RefShowCTM(ctmelm)
	{
		var ctm = getCTM(ctmelm);
		alert("CTM: [ " + ctm.a + " " + ctm.b + " " + ctm.c + " " + ctm.d + " " + ctm.e + " " + ctm.f + " ]");		
	}
	
	function ShowScreenCTM(ctmelm)
	{
		var ctm = ctmelm.getScreenCTM();
		alert("ScreenCTM: [ " + ctm.a + " " + ctm.b + " " + ctm.c + " " + ctm.d + " " + ctm.e + " " + ctm.f + " ]");
	}
	
	function RefShowScreenCTM(ctmelm)
	{
		var ctm = getScreenCTM(ctmelm);
		alert("ScreenCTM: [ " + ctm.a + " " + ctm.b + " " + ctm.c + " " + ctm.d + " " + ctm.e + " " + ctm.f + " ]");
	}

	function ShowBBox(bboxelm)
	{
		var bbox = bboxelm.getBBox();
		alert("BBox: [ (x:" + bbox.x + " y:" + bbox.y + ") (w:" + bbox.width + " h:" + bbox.height + ") ]");
	}
	
	function ShowTransformToElement(from, to)
	{
		var xfrm = from.getTransformToElement(to);
		alert("XForm: [ " + xfrm.a + " " + xfrm.b + " " + xfrm.c + " " + xfrm.d + " " + xfrm.e + " " + xfrm.f + " ]");
	}
	
	function RefShowTransformToElement(from, to)
	{
		var fromctm = from.getCTM();
		var toctm = to.getCTM();
		var toinv = toctm.inverse();
		var xfrm = fromctm.multiply(toinv);
		alert("XForm: [ " + xfrm.a + " " + xfrm.b + " " + xfrm.c + " " + xfrm.d + " " + xfrm.e + " " + xfrm.f + " ]");
	}
	
	function XFormRect()
	{
		var elm1 = document.getElementById("elem");
		var elm2 = document.getElementById("elem2");
		
		var mat = elm1.getTransformToElement(elm2);
		
		//alert(mat);
		
		var xform = document.getElementById("svgroot").createSVGTransformFromMatrix(mat);
		//alert(xform);

		//var xform = elm1.transform.baseVal.createSVGTransformFromMatrix(mat);
		//alert(xform);

		elm1.transform.baseVal.appendItem(xform);
	}
	
	function UnXFormRect()
	{
		var elm1 = document.getElementById("elem");
		elm1.transform.baseVal.removeItem(elm1.transform.baseVal.numberOfItems - 1);
	}
	
	function SwapRects()
	{
		var elm1 = document.getElementById("elem");
		var elm2 = document.getElementById("elem2");
		
		var mat1 = elm1.getTransformToElement(elm2);
		var mat2 = elm2.getTransformToElement(elm1);

		var xform1 = document.getElementById("svgroot").createSVGTransformFromMatrix(mat1);
		var xform2 = document.getElementById("svgroot").createSVGTransformFromMatrix(mat2);
		
		elm1.transform.baseVal.appendItem(xform1);
		elm2.transform.baseVal.appendItem(xform2);
	}
	
	function ShowXFormListLengths()
	{
		var elm1 = document.getElementById("elem");
		var elm2 = document.getElementById("elem2");
		
		alert("Elm1#: " + elm1.transform.baseVal.numberOfItems
		+ "\n Elm2#: " + elm2.transform.baseVal.numberOfItems);
	}
      ]]>      
    </script>
    <clipPath id="clip">
		<rect x="0" y="0" width="480" height="360"/>
    </clipPath>
</defs>
    <g id="rects" clip-path="url(#clip)">
		<g transform="translate(100) rotate(45)">
			<rect id="elem" x="40" y="30" width="400" height="300" transform="translate(10 20)" 
				fill="blue" stroke="red" stroke-width="3"/>
		</g>
		<g transform="rotate(-45)">
			<rect id="elem2" x="40" y="30" width="400" height="300" fill="green" stroke="blue" stroke-width="3"/>
		</g>		
	</g>
	<g id="buttonroot">
	</g>
	<svg x="150" y="100" width="100" height="100">
		<rect id="elem3" x="40" y="30" width="40" height="40" transform="translate(10 20)" 
			fill="red" stroke="green" stroke-width="3"/>
	</svg>
</svg>
