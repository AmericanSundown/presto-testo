<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="#xslt"?>
<!DOCTYPE xsl:stylesheet [<!ATTLIST xsl:stylesheet id ID #IMPLIED>]>
<xsl:stylesheet id="xslt" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
<xsl:template match="xsl:template">
<result>
<xsl:choose>
<xsl:when test='//zeta[@xml:id="id1"]//phi[contains(concat(@attribute,"$"),"reen$")][@xml:lang="en-US"][not(child::node())][following-sibling::iota[@object][@xml:id="id2"][preceding-sibling::*[position() = 1]][following-sibling::lambda[preceding-sibling::*[position() = 2]][following-sibling::*[position()=1]][not(child::node())][following-sibling::epsilon[starts-with(@token,"attribute-value")][@xml:id="id3"][not(following-sibling::*)]/rho[@xml:id="id4"][not(preceding-sibling::*)][not(following-sibling::*)]//phi[@xml:lang="en-US"][@xml:id="id5"][not(following-sibling::*)]//xi[not(child::node())][following-sibling::eta[@name][@xml:id="id6"][not(following-sibling::*)]/omicron[@class="attribute-value"][@xml:id="id7"][following-sibling::sigma[starts-with(@attrib,"attribute v")][@xml:lang="en-GB"][not(following-sibling::*)]//omicron[@xml:lang="en"]//upsilon[@abort][not(preceding-sibling::*)][following-sibling::omega[@number][@xml:lang="no"][@xml:id="id8"][following-sibling::nu[contains(concat(@src,"$"),"ibute value$")][@xml:lang="en-US"][preceding-sibling::*[position() = 2]][not(following-sibling::*)]//omega[@xml:lang="en-US"][@xml:id="id9"][not(preceding-sibling::*)][following-sibling::*[position()=1]][not(preceding-sibling::omega)][following-sibling::phi[@xml:lang="no-nb"][@xml:id="id10"][not(following-sibling::*)]//theta[starts-with(concat(@abort,"-"),"attribute-")][@xml:id="id11"]/delta[contains(@desciption,"lue")][not(following-sibling::*)]//omicron[@token][@xml:id="id12"][not(preceding-sibling::*)]/lambda[contains(@number,"reen")][@xml:lang="en-GB"][@xml:id="id13"][following-sibling::lambda[@att][@xml:id="id14"][preceding-sibling::*[position() = 1]][following-sibling::*[position()=1]][following-sibling::epsilon[@delete="solid 1px green"][@xml:lang="en-US"][@xml:id="id15"][preceding-sibling::*[position() = 2]][not(following-sibling::*)]/phi[contains(concat(@name,"$")," attribute value$")][@xml:lang="en-GB"][@xml:id="id16"][not(preceding-sibling::*)]]]]]][position() = 1]][position() = 1]][position() = 1]]][position() = 1]]'>	
	<xsl:value-of select="'PASS'"/>
</xsl:when>
<xsl:otherwise>FAIL</xsl:otherwise>
</xsl:choose>
</result>
<xsl:if test="false()">
<zeta xml:id="id1"><phi attribute="solid 1px green" xml:lang="en-US"/><iota object="123456789" xml:id="id2"/><lambda/><epsilon token="attribute-value" xml:id="id3"><rho xml:id="id4"><phi xml:lang="en-US" xml:id="id5"><xi/><eta name="this-is-att-value" xml:id="id6"><omicron class="attribute-value" xml:id="id7"/><sigma attrib="attribute value" xml:lang="en-GB"><omicron xml:lang="en"><upsilon abort="this-is-att-value"/><omega number="attribute" xml:lang="no" xml:id="id8"/><nu src="attribute value" xml:lang="en-US"><omega xml:lang="en-US" xml:id="id9"/><phi xml:lang="no-nb" xml:id="id10"><theta abort="attribute-value" xml:id="id11"><delta desciption="attribute-value"><omicron token="attribute-value" xml:id="id12"><lambda number="solid 1px green" xml:lang="en-GB" xml:id="id13"/><lambda att="false" xml:id="id14"/><epsilon delete="solid 1px green" xml:lang="en-US" xml:id="id15"><phi name="another attribute value" xml:lang="en-GB" xml:id="id16"><green>This text must be green</green></phi></epsilon></omicron></delta></theta></phi></nu></omicron></sigma></eta></phi></rho></epsilon></zeta></xsl:if>
</xsl:template>
</xsl:stylesheet>
