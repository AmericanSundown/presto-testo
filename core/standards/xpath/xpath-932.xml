<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="#xslt"?>
<!DOCTYPE xsl:stylesheet [<!ATTLIST xsl:stylesheet id ID #IMPLIED>]>
<xsl:stylesheet id="xslt" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
<xsl:template match="xsl:template">
<result>
<xsl:choose>
<xsl:when test='//delta[contains(concat(@or,"$"),"e$")]//phi[@xml:lang="en-GB"][not(child::node())][following-sibling::sigma[starts-with(@token,"10")]/*[starts-with(@src,"true")][@xml:lang="en-US"][following-sibling::*[position()=3]][following-sibling::alpha[@xml:lang="en"][@xml:id="id1"][following-sibling::tau[@string][@xml:id="id2"][not(child::node())][following-sibling::lambda[preceding-sibling::*[position() = 3]][not(following-sibling::*)]]]]]'>	
	<xsl:value-of select="'PASS'"/>
</xsl:when>
<xsl:otherwise>FAIL</xsl:otherwise>
</xsl:choose>
</result>
<xsl:if test="false()">
<delta or="attribute value"><phi xml:lang="en-GB"/><sigma token="100%"><any src="true" xml:lang="en-US"/><alpha xml:lang="en" xml:id="id1"/><tau string="attribute" xml:id="id2"/><lambda><green>This text must be green</green></lambda></sigma></delta></xsl:if>
</xsl:template>
</xsl:stylesheet>
