<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="#xslt"?>
<!DOCTYPE xsl:stylesheet [<!ATTLIST xsl:stylesheet id ID #IMPLIED>]>
<xsl:stylesheet id="xslt" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
<xsl:template match="xsl:template">
<result>
<xsl:choose>
<xsl:when test='//xi[contains(concat(@src,"$"),"another attribute value$")][@xml:id="id1"]//eta[contains(concat(@and,"$"),"e$")]//nu[@true][@xml:lang="no"][@xml:id="id2"][not(child::node())][following-sibling::gamma[preceding-sibling::*[position() = 1]][not(following-sibling::*)]/rho[@att][@xml:lang="en-US"][not(preceding-sibling::*)][not(following-sibling::*)]//phi[starts-with(concat(@abort,"-"),"attribute value-")][@xml:id="id3"][not(following-sibling::*)][position() = 1]]'>	
	<xsl:value-of select="'PASS'"/>
</xsl:when>
<xsl:otherwise>FAIL</xsl:otherwise>
</xsl:choose>
</result>
<xsl:if test="false()">
<xi src="another attribute value" xml:id="id1"><eta and="true"><nu true="_blank" xml:lang="no" xml:id="id2"/><gamma><rho att="false" xml:lang="en-US"><phi abort="attribute value" xml:id="id3"><green>This text must be green</green></phi></rho></gamma></eta></xi></xsl:if>
</xsl:template>
</xsl:stylesheet>
