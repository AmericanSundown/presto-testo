<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="#xslt"?>
<!DOCTYPE xsl:stylesheet [<!ATTLIST xsl:stylesheet id ID #IMPLIED>]>
<xsl:stylesheet id="xslt" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
<xsl:template match="xsl:template">
<result>
<xsl:choose>
<xsl:when test='//sigma[@xml:id="id1"]/mu[@xml:id="id2"]/sigma[not(following-sibling::*)]//epsilon[@xml:lang="nb"][@xml:id="id3"][not(preceding-sibling::*)][not(following-sibling::*)]//phi[@and="attribute"][@xml:id="id4"][following-sibling::sigma[contains(@false,"ue")][@xml:id="id5"][preceding-sibling::*[position() = 1]]//iota[@insert][@xml:id="id6"][not(preceding-sibling::*)][not(child::node())][following-sibling::chi[starts-with(concat(@attr,"-"),"100%-")][@xml:id="id7"][preceding-sibling::*[position() = 1]][not(child::node())][following-sibling::beta[preceding-sibling::*[position() = 2]][not(following-sibling::*)]/zeta[@delete][@xml:lang="no-nb"][@xml:id="id8"][not(preceding-sibling::*)][following-sibling::*[position()=1]][following-sibling::sigma[@xml:lang="en-GB"][@xml:id="id9"][preceding-sibling::*[position() = 1]][not(following-sibling::*)]/tau[@xml:id="id10"][not(following-sibling::*)]/pi[contains(concat(@string,"$"),"d 1px green$")][@xml:lang="no-nb"][@xml:id="id11"][not(preceding-sibling::*)]//psi[@xml:id="id12"]//zeta[not(preceding-sibling::*)][not(preceding-sibling::zeta or following-sibling::zeta)]/eta[@attribute][@xml:lang="en-US"][not(preceding-sibling::*)][following-sibling::*[position()=1]][not(child::node())][following-sibling::chi[@xml:id="id13"]//kappa[@and][@xml:lang="en"][not(following-sibling::*)]/alpha[@abort][@xml:id="id14"]//phi[contains(@title,"ute value")][not(following-sibling::*)]/xi[@xml:lang="no-nb"][@xml:id="id15"][not(following-sibling::*)]/chi[contains(concat(@data,"$"),"ue$")][@xml:lang="no-nb"]//upsilon[@xml:id="id16"][not(preceding-sibling::*)][not(following-sibling::*)]//psi[@xml:id="id17"]][position() = 1]][position() = 1]]]]'>	
	<xsl:value-of select="'PASS'"/>
</xsl:when>
<xsl:otherwise>FAIL</xsl:otherwise>
</xsl:choose>
</result>
<xsl:if test="false()">
<sigma xml:id="id1"><mu xml:id="id2"><sigma><epsilon xml:lang="nb" xml:id="id3"><phi and="attribute" xml:id="id4"/><sigma false="attribute-value" xml:id="id5"><iota insert="content" xml:id="id6"/><chi attr="100%" xml:id="id7"/><beta><zeta delete="this.nodeValue" xml:lang="no-nb" xml:id="id8"/><sigma xml:lang="en-GB" xml:id="id9"><tau xml:id="id10"><pi string="solid 1px green" xml:lang="no-nb" xml:id="id11"><psi xml:id="id12"><zeta><eta attribute="another attribute value" xml:lang="en-US"/><chi xml:id="id13"><kappa and="123456789" xml:lang="en"><alpha abort="123456789" xml:id="id14"><phi title="attribute value"><xi xml:lang="no-nb" xml:id="id15"><chi data="attribute-value" xml:lang="no-nb"><upsilon xml:id="id16"><psi xml:id="id17"><green>This text must be green</green></psi></upsilon></chi></xi></phi></alpha></kappa></chi></zeta></psi></pi></tau></sigma></beta></sigma></epsilon></sigma></mu></sigma></xsl:if>
</xsl:template>
</xsl:stylesheet>
